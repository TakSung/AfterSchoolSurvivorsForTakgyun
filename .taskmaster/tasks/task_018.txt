# Task ID: 18
# Title: EntityRenderSystem 좌표 변환 적용 업데이트
# Status: done
# Dependencies: 16
# Priority: high
# Description: 기존 렌더링 시스템을 월드-스크린 좌표 변환이 적용되도록 업데이트하고, 플레이어 중앙 고정 렌더링을 구현한다.
# Details:
EntityRenderSystem에서 PositionComponent를 가진 엔티티들의 월드 좌표를 CoordinateManager.world_to_screen()으로 변환한다. 화면 밖 컬링을 위한 _is_on_screen() 메서드를 구현하여 50픽셀 여유분으로 성능을 최적화한다. 플레이어는 화면 중앙 고정으로 별도 렌더링하며, 회전 각도를 적용한 스프라이트를 pygame.transform.rotate()로 처리한다. Y좌표 기준 깊이 정렬을 적용한다.

# Test Strategy:
좌표 변환 정확성을 테스트하고, 화면 밖 컬링 동작을 검증한다. 플레이어 중앙 고정 렌더링과 회전 적용을 테스트하며, 깊이 정렬 기능을 확인한다.

# Subtasks:
## 1. 좌표 변환 시스템 통합 및 world_to_screen 적용 [done]
### Dependencies: None
### Description: EntityRenderSystem에 CoordinateManager.world_to_screen() 메서드를 통합하여 월드 좌표를 스크린 좌표로 변환하는 기능을 구현합니다.
### Details:
EntityRenderSystem 클래스에서 CoordinateManager 인스턴스를 받아 초기화하고, render() 메서드에서 PositionComponent를 가진 모든 엔티티의 월드 좌표를 world_to_screen()으로 변환합니다. 변환된 좌표로 스프라이트를 정확한 스크린 위치에 렌더링하며, 좌표 변환 과정에서 발생할 수 있는 부동소수점 오차를 처리합니다.

## 2. 화면 밖 컬링 최적화 시스템 구현 [done]
### Dependencies: 18.1
### Description: _is_on_screen() 메서드를 구현하여 렌더링할 엔티티를 선별하고 성능을 최적화합니다.
### Details:
화면 경계에서 50픽셀 여유분을 두고 엔티티가 화면 내에 있는지 판단하는 _is_on_screen() 메서드를 구현합니다. 엔티티의 크기(sprite 크기 또는 CollisionComponent)를 고려하여 정확한 컬링을 수행하며, 화면 밖 엔티티는 렌더링 과정에서 제외합니다. 컬링 결과를 통계로 수집하여 성능 모니터링이 가능하도록 구현합니다.

## 3. 플레이어 중앙 고정 렌더링 시스템 [done]
### Dependencies: 18.1
### Description: 플레이어를 항상 화면 중앙에 고정하여 렌더링하는 별도 로직을 구현합니다.
### Details:
PlayerComponent를 가진 엔티티를 식별하여 월드 좌표와 관계없이 항상 화면 중앙(screen_width/2, screen_height/2)에 렌더링하도록 _render_player() 메서드를 구현합니다. 플레이어의 회전 각도(RotationComponent)를 pygame.transform.rotate()로 적용하고, 회전으로 인한 스프라이트 크기 변화를 중앙 정렬로 보정합니다. 플레이어 렌더링은 다른 엔티티보다 우선순위를 높여 항상 최상단에 표시합니다.

## 4. 깊이 정렬 및 회전 처리 시스템 구현 [done]
### Dependencies: 18.2, 18.3
### Description: Y좌표 기반 깊이 정렬과 엔티티별 회전 각도 적용을 구현합니다.
### Details:
모든 렌더링 대상 엔티티를 Y좌표 기준으로 정렬하여 깊이감을 구현하고, RotationComponent를 가진 엔티티는 pygame.transform.rotate()로 회전을 적용합니다. 회전된 스프라이트의 중심점을 유지하기 위한 offset 계산을 수행하며, 회전으로 인한 성능 저하를 최소화하기 위해 회전 각도가 변경된 경우에만 재계산하는 캐싱 시스템을 구현합니다. 정렬과 회전 처리 과정의 성능을 모니터링할 수 있는 디버그 정보를 제공합니다.

