# Task ID: 15
# Title: CameraComponent와 CameraSystem 구현
# Status: done
# Dependencies: 14
# Priority: high
# Description: 플레이어 중앙 고정을 위한 CameraComponent와 월드 오프셋을 관리하는 CameraSystem을 구현한다.
# Details:
CameraComponent는 world_offset, screen_center, world_bounds, follow_target 필드를 포함한다. CameraSystem은 ISystem을 구현하여 플레이어 이동의 역방향으로 카메라 월드 오프셋을 업데이트한다. 마우스 추적을 위한 데드존 처리(10픽셀)와 월드 경계 처리를 포함한다. CoordinateManager와 연동하여 좌표 변환 캐시 무효화를 관리한다. 화면 중앙을 기준으로 SCREEN_WIDTH//2, SCREEN_HEIGHT//2 좌표를 사용한다.

# Test Strategy:
카메라 오프셋 업데이트 로직을 테스트하고, 월드 경계 제한 동작을 검증한다. 플레이어 이동에 따른 역방향 카메라 이동을 테스트하며, CoordinateManager 연동 동작을 확인한다.

# Subtasks:
## 1. CameraComponent 데이터 구조 설계 및 구현 [done]
### Dependencies: None
### Description: 카메라 시스템의 핵심 데이터를 저장하는 CameraComponent를 dataclass로 구현합니다.
### Details:
CameraComponent는 world_offset(tuple[float, float]), screen_center(tuple[int, int]), world_bounds(dict), follow_target(Optional[Entity]) 필드를 포함합니다. world_offset은 월드 좌표계에서의 카메라 오프셋을, screen_center는 화면 중앙 좌표(SCREEN_WIDTH//2, SCREEN_HEIGHT//2)를 저장합니다. world_bounds는 카메라 이동 제한 영역을 정의하고, follow_target은 추적 대상 엔티티를 참조합니다. 타입 힌트와 기본값을 완전히 지정하여 구현합니다.

## 2. CameraSystem 업데이트 로직 구현 [done]
### Dependencies: 15.1
### Description: ISystem을 구현하는 CameraSystem 클래스를 작성하여 카메라 오프셋 업데이트 로직을 구현합니다.
### Details:
CameraSystem은 플레이어 이동의 역방향으로 world_offset을 업데이트하여 플레이어가 화면 중앙에 고정되도록 합니다. 마우스 추적을 위한 10픽셀 데드존 처리를 구현하고, world_bounds를 사용한 월드 경계 제한을 적용합니다. update() 메서드에서 delta_time을 받아 부드러운 카메라 이동을 지원하며, 플레이어 위치 변화에 따른 즉시 오프셋 계산을 수행합니다.

## 3. CoordinateManager 연동 및 캐시 관리 구현 [done]
### Dependencies: 15.2
### Description: CameraSystem과 CoordinateManager 간의 연동을 구현하고 좌표 변환 캐시 무효화 메커니즘을 구축합니다.
### Details:
CameraSystem에서 world_offset이 변경될 때 CoordinateManager의 캐시 무효화를 호출하여 좌표 변환 정확성을 보장합니다. screen_to_world(), world_to_screen() 변환 함수와의 연동을 구현하고, 카메라 이동 시 영향받는 모든 렌더링 시스템에 변경사항을 전파합니다. 성능 최적화를 위해 오프셋 변화량이 임계값(1픽셀) 미만일 경우 캐시 무효화를 생략하는 로직을 추가합니다.

