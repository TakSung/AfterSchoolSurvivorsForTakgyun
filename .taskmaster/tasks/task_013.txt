# Task ID: 13
# Title: 좌표 변환 시스템 인터페이스 설계 및 기본 구현
# Status: done
# Dependencies: None
# Priority: high
# Description: ICoordinateTransformer 인터페이스와 CameraBasedTransformer 기본 구현을 개발하여 월드-스크린 좌표 변환 시스템의 기반을 구축한다.
# Details:
추상 베이스 클래스 ICoordinateTransformer를 정의하고 world_to_screen(), screen_to_world(), get_camera_offset() 메서드를 포함한다. CameraBasedTransformer 클래스로 초기 구현을 제공하며, 캐싱 메커니즘을 포함한다. 향후 OptimizedTransformer와 SpatialOptimizedTransformer로 확장 가능한 다형성 구조를 구현한다. Vector2 클래스 기반으로 좌표 계산을 수행하고, 성능을 위한 캐시 무효화 플래그를 관리한다.

# Test Strategy:
단위 테스트로 world_to_screen과 screen_to_world 변환의 정확성을 검증하고, 왕복 변환 시 좌표 일관성을 확인한다. 다양한 카메라 오프셋 값에 대한 경계값 테스트를 수행하며, 캐싱 동작 테스트를 포함한다.

# Subtasks:
## 1. ICoordinateTransformer 인터페이스 및 Vector2 수학 클래스 설계 [done]
### Dependencies: None
### Description: 좌표 변환 시스템의 핵심 인터페이스와 수학적 연산을 담당하는 Vector2 클래스를 설계하고 구현한다
### Details:
src/core/coordinate_transformer.py에 ICoordinateTransformer ABC 클래스를 정의하여 world_to_screen(), screen_to_world(), get_camera_offset(), invalidate_cache() 메서드를 포함한다. src/utils/vector2.py에 Vector2 클래스를 구현하여 좌표 계산, 벡터 연산, 거리 계산 등을 지원한다. 모든 좌표 변환은 Vector2 타입으로 처리하며, 성능을 위한 __slots__ 최적화를 적용한다. 타입 힌트를 완전히 적용하고 IntEnum으로 좌표 타입을 정의한다.

## 2. CameraBasedTransformer 기본 구현 [done]
### Dependencies: 13.1
### Description: ICoordinateTransformer 인터페이스를 구현하는 CameraBasedTransformer 클래스를 개발한다
### Details:
src/core/camera_based_transformer.py에 CameraBasedTransformer 클래스를 구현한다. 카메라 오프셋을 기반으로 한 기본적인 world_to_screen, screen_to_world 변환 로직을 구현한다. 카메라 중심점, 줌 레벨, 화면 크기를 고려한 변환 수식을 적용한다. 변환 매트릭스 개념을 도입하여 확장 가능성을 고려한다. 기존 PlayerMovementSystem, CameraSystem과의 통합을 위해 PositionComponent와 호환되는 구조로 설계한다.

## 3. 좌표 변환 캐싱 메커니즘 구현 [done]
### Dependencies: 13.2
### Description: 성능 최적화를 위한 좌표 변환 결과 캐싱 시스템을 구현한다
### Details:
CameraBasedTransformer에 LRU 캐시를 적용하여 자주 사용되는 좌표 변환 결과를 저장한다. 카메라 위치나 줌 레벨 변경 시 캐시를 무효화하는 cache_dirty 플래그를 관리한다. 캐시 히트율 추적 기능을 구현하여 성능 모니터링을 지원한다. 메모리 사용량을 제한하는 최대 캐시 크기를 설정한다. 향후 Task 22의 성능 최적화와 연계하여 40+ FPS 목표 달성에 기여한다.

## 4. 좌표 변환 시스템 통합 테스트 및 기존 시스템 영향도 분석 [done]
### Dependencies: 13.3
### Description: 구현된 좌표 변환 시스템의 정확성을 검증하고 기존 시스템과의 통합 영향을 분석한다
### Details:
tests/test_coordinate_transformer.py에 단위 테스트를 작성하여 world_to_screen과 screen_to_world의 왕복 변환 정확성을 검증한다. 다양한 카메라 오프셋과 줌 레벨에서의 경계값 테스트를 수행한다. 캐싱 메커니즘의 동작과 무효화 로직을 테스트한다. PlayerMovementSystem, EnemyAISystem, AutoAttackSystem에서 좌표 변환 사용 시 발생할 수 있는 영향을 분석하고 호환성을 확인한다. RenderSystem과의 연동을 위한 인터페이스 검증을 수행한다.

