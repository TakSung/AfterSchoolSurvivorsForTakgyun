# Task ID: 16
# Title: PlayerMovementComponent 및 PlayerMovementSystem 재구현
# Status: done
# Dependencies: 15
# Priority: high
# Description: 플레이어 중앙 고정 방식에 맞춘 PlayerMovementComponent와 마우스 추적 기반 PlayerMovementSystem을 구현한다.
# Details:
PlayerMovementComponent를 dataclass로 구현하여 world_position, direction, speed, rotation_angle, angular_velocity_limit 필드를 포함한다. PlayerMovementSystem에서 pygame.mouse.get_pos()로 마우스 위치를 추적하고, 화면 중앙 기준으로 방향을 계산한다. 10픽셀 데드존 처리와 부드러운 회전을 위한 각속도 제한을 적용한다. math.atan2를 사용한 각도 계산과 normalize()를 통한 방향 벡터 정규화를 구현한다.

# Test Strategy:
마우스 위치에 따른 방향 계산 정확성을 테스트하고, 데드존 동작을 검증한다. 부드러운 회전 로직과 각속도 제한을 테스트하며, 월드 위치 업데이트를 확인한다.

# Subtasks:
## 1. PlayerMovementComponent 데이터 구조 설계 및 구현 [done]
### Dependencies: None
### Description: 새로운 좌표계에 맞춘 PlayerMovementComponent를 dataclass로 구현하고, 필요한 데이터 필드들을 정의합니다.
### Details:
dataclass 기반으로 PlayerMovementComponent를 구현하며, world_position(tuple[float, float]), direction(tuple[float, float]), speed(float), rotation_angle(float), angular_velocity_limit(float) 필드를 포함합니다. 타입 힌트를 완전히 적용하고, 초기값 설정과 데이터 검증 로직을 추가합니다. 좌표계 변화로 인한 추가 필드(이전 위치 추적, 가속도 등)도 고려하여 설계합니다.

## 2. 마우스 추적 및 방향 계산 로직 구현 [done]
### Dependencies: 16.1
### Description: pygame.mouse.get_pos()를 활용한 마우스 위치 추적과 화면 중앙 기준 방향 계산 로직을 구현합니다.
### Details:
PlayerMovementSystem에서 pygame.mouse.get_pos()로 실시간 마우스 위치를 추적하고, CoordinateManager를 통해 화면 중앙(플레이어 고정 위치) 기준으로 방향을 계산합니다. math.atan2를 사용한 정확한 각도 계산과 벡터 정규화(normalize()) 로직을 구현합니다. 좌표계 변환이 마우스 입력 처리에 미치는 영향을 고려하여 world-screen 좌표 변환을 적절히 적용합니다.

## 3. 부드러운 회전 및 데드존 처리 시스템 구현 [done]
### Dependencies: 16.2
### Description: 각속도 제한을 통한 부드러운 회전과 10픽셀 데드존 처리 로직을 구현하고 테스트합니다.
### Details:
angular_velocity_limit을 적용한 부드러운 회전 로직을 구현하여 급작스러운 방향 전환을 방지합니다. 마우스 커서가 화면 중앙에서 10픽셀 이내일 때 움직임을 정지시키는 데드존 처리를 구현합니다. 회전 보간(interpolation) 알고리즘을 적용하여 자연스러운 회전 효과를 달성하고, 좌표계 변화로 인한 회전 계산의 정확성을 검증합니다. 성능 최적화를 위한 회전 계산 캐싱도 고려합니다.

