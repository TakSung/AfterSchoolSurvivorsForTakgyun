# Task ID: 5
# Title: 플레이어 마우스 이동 시스템
# Status: done
# Dependencies: 2, 3
# Priority: high
# Description: 마우스 커서를 향해 플레이어가 바라보지만 플레이어는 중앙에 고정되고 맵이 플레이어 반대 방향으로 움직이는 카메라 시스템을 구현합니다.
# Details:
src/systems/movement_system.py에서 pygame.mouse.get_pos()를 사용해 마우스 위치를 추적하고 플레이어가 마우스 방향을 바라보도록 합니다. 플레이어는 화면 중앙에 고정되고, CameraSystem을 통해 맵이 플레이어 이동의 역방향으로 움직입니다. PlayerMovementComponent에 이동 방향과 속도를 저장하고, MapSystem에서 배경과 오브젝트들을 카메라 오프셋에 따라 렌더링합니다. 맵 움직임을 시각적으로 확인할 수 있는 타일 패턴이나 그리드 배경을 구현합니다.

# Test Strategy:
마우스 위치 변화에 따른 플레이어 회전 방향이 정확한지 테스트합니다. 카메라 이동에 따른 맵 오브젝트 위치 변화와 시각적 피드백이 올바르게 작동하는지 검증합니다. 맵 경계 처리와 카메라 제한 범위에 대한 테스트를 포함합니다.

# Subtasks:
## 1. 마우스 위치 추적 및 플레이어 회전 구현 [done]
### Dependencies: None
### Description: pygame을 사용해 마우스 위치를 실시간으로 추적하고, 플레이어가 마우스 방향을 바라보도록 회전시키는 시스템을 구현합니다.
### Details:
pygame.mouse.get_pos()를 사용하여 마우스 좌표를 획득하고, 플레이어 위치(화면 중앙)와의 방향각을 계산합니다. math.atan2를 활용한 각도 계산과 플레이어 스프라이트 회전 로직을 src/systems/movement_system.py에 구현합니다. 플레이어 회전 시 부드러운 회전 전환을 위한 각속도 제한을 적용합니다. 추가적으로 플레이어 위치를 획득하는 부분과 계산하는 부분을 분리하여 유닛테스트를 만들기 유용하게 작성합니다.

## 2. 카메라 시스템과 맵 역방향 이동 구현 [done]
### Dependencies: 5.1
### Description: 플레이어를 화면 중앙에 고정하고 맵이 플레이어 이동의 역방향으로 움직이는 카메라 시스템을 구현합니다.
### Details:
CameraSystem 클래스를 생성하여 카메라 오프셋을 관리합니다. 플레이어는 화면 중앙 고정 위치에 렌더링하고, 플레이어의 이동 입력에 따라 월드 좌표계를 역방향으로 이동시킵니다. PlayerMovementComponent에 이동 속도와 방향을 저장하여 카메라 오프셋 계산에 활용합니다. 모든 게임 오브젝트의 렌더링 시 카메라 오프셋을 적용하는 시스템을 구현합니다. UI부분과 객체 부분이 분리되어 유닛테스트가 쉽도록 작성합니다.

## 3. 시각적 맵 시스템 및 경계 처리 [done]
### Dependencies: 5.2
### Description: 맵 움직임을 확인할 수 있는 시각적 배경과 카메라 경계 처리 시스템을 구현합니다.
### Details:
타일 기반 배경 시스템이나 그리드 패턴을 구현하여 카메라 이동을 시각적으로 확인할 수 있게 합니다. 맵 경계를 설정하고 카메라가 맵 밖으로 나가지 않도록 제한하는 boundary checking을 구현합니다. 배경 타일의 무한 스크롤링 또는 맵 크기 제한 시스템을 추가하여 자연스러운 맵 탐색 경험을 제공합니다. 코드 디자인이 유닛테스트 하기 쉽도록, 위치가 주어질 때 어떤 타일을 제공해야하는 지에 대한 정보를 계산하는 함수(혹은 객체)를 분리해서 작성하여 타일 로드와 어떤 타일을 로드해야하는지 계산하는 로직을 분리합니다.

