# Task ID: 7
# Title: 기본 적 AI 및 스포너 시스템
# Status: pending
# Dependencies: 3, 5
# Priority: medium
# Description: 플레이어를 추격하고 공격하는 기본 적 AI와 적 생성 시스템을 구현합니다.
# Details:
src/systems/ai_system.py에서 EnemyAIComponent를 정의하여 AI 상태(PATROL, CHASE, ATTACK)를 관리합니다. 적과 플레이어 사이의 거리에 따라 행동을 결정하는 상태 기반 AI를 구현합니다. EnemySpawner 클래스로 일정 시간마다 화면 가장자리에서 적을 생성하며, 시간 경과에 따라 난이도가 증가하도록 적 능력치를 조정합니다. 적의 체력, 공격력, 이동 속도를 JSON 데이터로 관리합니다.

# Test Strategy:
AI 상태 전환 로직이 거리와 조건에 따라 정확히 동작하는지 테스트합니다. 적 스포너의 시간 기반 생성과 난이도 조정이 의도대로 작동하는지 검증합니다.

# Subtasks:
## 1. EnemyAIComponent와 AI 상태 구조 설계 [pending]
### Dependencies: None
### Description: AI 상태(PATROL, CHASE, ATTACK)를 관리하는 EnemyAIComponent 클래스를 설계하고 구현합니다.
### Details:
src/systems/ai_system.py에 EnemyAIComponent 클래스를 생성하고, AI_STATE 열거형으로 PATROL, CHASE, ATTACK 상태를 정의합니다. 각 상태별 행동 로직을 위한 메서드 구조를 설계하고, 상태 전환을 위한 조건 검사 시스템을 구현합니다. 적의 현재 타겟, 상태, 이동 방향 등을 저장하는 데이터 구조를 만듭니다.

## 2. 거리 기반 AI 상태 전환 로직 구현 [pending]
### Dependencies: 7.1
### Description: 플레이어와의 거리에 따라 AI 상태가 자동으로 전환되는 로직을 구현합니다.
### Details:
플레이어와 적 사이의 거리를 계산하는 함수를 구현하고, 거리에 따른 상태 전환 임계값(순찰 범위, 추격 시작 거리, 공격 범위)을 설정합니다. update_ai_state() 메서드에서 현재 거리를 확인하여 적절한 상태로 전환하는 로직을 구현합니다. 각 상태별 행동(순찰 이동, 플레이어 추격, 공격 실행)을 구현합니다. 상태를 변경하는 조건 계산과 계산 로직, 상태 변경 로직을 분리하여 유닛테스트를 할수 있도록 합니다.

## 3. EnemySpawner와 시간 기반 생성 시스템 구현 [pending]
### Dependencies: 7.1
### Description: 일정 시간마다 화면 가장자리에서 적을 생성하는 EnemySpawner 시스템을 구현합니다.
### Details:
EnemySpawner 클래스를 생성하고, 스폰 타이머와 스폰 간격을 관리하는 시스템을 구현합니다. 화면 가장자리의 랜덤한 위치에서 적을 생성하는 로직을 만들고, 화면 밖 영역에서 생성되도록 스폰 포인트를 계산합니다. 동시에 존재할 수 있는 최대 적 수 제한을 구현합니다. 동시에 적을 생성 할 수 있는지의 여부 판단 로직을 분리, 스폰 타임 측정하는 로직 분리 등 판단을 계산하는 로직과 실제 변경하는 로직을 분리하여 유닛테스트 하기 유용하도록 합니다.

## 4. 시간 기반 난이도 조정 메커니즘 구현 [pending]
### Dependencies: 7.3
### Description: 게임 진행 시간에 따라 적의 능력치와 스폰 빈도가 증가하는 난이도 조정 시스템을 구현합니다.
### Details:
게임 경과 시간을 추적하는 시스템을 구현하고, 시간에 따른 난이도 계수를 계산하는 함수를 만듭니다. 적 생성 시 현재 난이도에 따라 체력, 공격력, 이동 속도를 조정하는 로직을 구현합니다. 스폰 간격도 시간이 지날수록 점차 단축되도록 설정합니다.

## 5. JSON 기반 적 데이터 관리 시스템 구현 [pending]
### Dependencies: 7.2
### Description: 적의 기본 능력치와 AI 설정을 JSON 파일로 관리하는 데이터 시스템을 구현합니다.
### Details:
data/enemies.json 파일을 생성하여 적 타입별 기본 스탯(체력, 공격력, 이동 속도, AI 임계값 등)을 정의합니다. JSON 데이터를 로드하고 적 생성 시 해당 데이터를 적용하는 DataManager 클래스를 구현합니다. 적 타입별로 다른 AI 행동 패턴을 설정할 수 있도록 확장 가능한 구조를 만듭니다. 팩토리 패턴을 사용해서 시간 대 별로 스폰 정책을 따로 설정할 수 있고, 개별의 스폰 정책에 대해서 스폰 시스템이 몰라도 되도록 추상화 합니다.

